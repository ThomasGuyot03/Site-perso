{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = {\n  class: \"animated-grid\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_router_view), _createCommentVNode(\" Grille animée \"), _createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.rows, row => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: 'row-' + row,\n      class: \"row\"\n    }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.cols, col => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: 'col-' + col,\n        class: \"cell\",\n        style: _normalizeStyle({\n          animationDelay: `${$setup.randomDelay()}s`\n        })\n      }, null, 4 /* STYLE */);\n    }), 128 /* KEYED_FRAGMENT */))]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["id","class","_createElementBlock","_hoisted_1","_createVNode","_component_router_view","_createCommentVNode","_createElementVNode","_hoisted_2","_Fragment","_renderList","$setup","rows","row","key","cols","col","style","_normalizeStyle","animationDelay","randomDelay"],"sources":["C:\\Users\\thoma\\Desktop\\Site pro\\mon-site\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <router-view />\n    <!-- Grille animée -->\n    <div class=\"animated-grid\">\n      <div v-for=\"row in rows\" :key=\"'row-' + row\" class=\"row\">\n        <div\n          v-for=\"col in cols\"\n          :key=\"'col-' + col\"\n          class=\"cell\"\n          :style=\"{ animationDelay: `${randomDelay()}s` }\"\n        ></div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from \"vue\";\n\n// Nombre de lignes et colonnes pour la grille animée\nconst rows = Array.from({ length: 10 }); // 10 lignes\nconst cols = Array.from({ length: 10 }); // 10 colonnes\n\n// Fonction pour générer un délai aléatoire pour chaque carré\nconst randomDelay = () => Math.random() * 5; // Délai entre 0 et 5 secondes\n</script>\n\n<style>\n/* Arrière-plan principal */\nbody {\n  margin: 0;\n  background-color: #2b2b2b; /* Fond noir */\n  color: #fff; /* Texte blanc */\n  font-family: Arial, sans-serif;\n  overflow-x: hidden;\n}\n\n#app {\n  position: relative;\n  min-height: 100vh;\n  background-color: #2c2c2c; /* Couleur de fond principale */\n  background-image: \n    linear-gradient(rgba(255, 255, 255, 0.05) 1px, transparent 1px),\n    linear-gradient(to right, rgba(255, 255, 255, 0.05) 1px, transparent 1px);\n  background-size: 50px 50px; /* Taille des carrés de la grille */\n}\n\n/* Conteneur de la grille animée */\n.animated-grid {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  pointer-events: none; /* Ignore les clics sur la grille */\n}\n\n/* Chaque ligne de la grille */\n.row {\n  display: flex;\n  justify-content: center;\n}\n\n/* Carrés de la grille */\n.cell {\n  width: 50px;\n  height: 50px;\n  background-color: black; /* Fond initial noir */\n  margin: 1px;\n  animation: fadeInOut 5s infinite; /* Animation */\n}\n\n/* Animation des carrés */\n@keyframes fadeInOut {\n  0% {\n    background-color: black;\n  }\n  50% {\n    background-color: rgba(200, 200, 200, 0.3); /* Gris clair */\n  }\n  100% {\n    background-color: black;\n  }\n}\n\n/* Cercle pulsant supplémentaire */\n#app::before {\n  content: '';\n  position: absolute;\n  top: 20%;\n  right: 10%;\n  width: 150px;\n  height: 150px;\n  background: transparent;\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  border-radius: 50%;\n  animation: pulse 3s infinite alternate;\n}\n\n@keyframes pulse {\n  from {\n    transform: scale(1);\n    opacity: 0.6;\n  }\n  to {\n    transform: scale(1.2);\n    opacity: 0.2;\n  }\n}\n</style>\n"],"mappings":";;EACOA,EAAE,EAAC;AAAK;;EAGNC,KAAK,EAAC;AAAe;;;uBAH5BC,mBAAA,CAaM,OAbNC,UAaM,GAZJC,YAAA,CAAeC,sBAAA,GACfC,mBAAA,mBAAsB,EACtBC,mBAAA,CASM,OATNC,UASM,I,kBARJN,mBAAA,CAOMO,SAAA,QAZZC,WAAA,CAKyBC,MAAA,CAAAC,IAAI,EAAXC,GAAG;yBAAfX,mBAAA,CAOM;MAPoBY,GAAG,WAAWD,GAAG;MAAEZ,KAAK,EAAC;2BACjDC,mBAAA,CAKOO,SAAA,QAXfC,WAAA,CAOwBC,MAAA,CAAAI,IAAI,EAAXC,GAAG;2BADZd,mBAAA,CAKO;QAHJY,GAAG,WAAWE,GAAG;QAClBf,KAAK,EAAC,MAAM;QACXgB,KAAK,EAVhBC,eAAA;UAAAC,cAAA,KAUuCR,MAAA,CAAAS,WAAW;QAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}