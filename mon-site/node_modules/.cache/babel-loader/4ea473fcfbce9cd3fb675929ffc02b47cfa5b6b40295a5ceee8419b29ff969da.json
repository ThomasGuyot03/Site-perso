{"ast":null,"code":"const gridSize = 50; // Taille des cellules de la grille en pixels\n\nexport default {\n  __name: 'App',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n\n    // Génération de 10 carrés avec des positions alignées sur la grille\n    const rows = Math.ceil(window.innerHeight / gridSize); // Nombre de lignes\n    const cols = Math.ceil(window.innerWidth / gridSize); // Nombre de colonnes\n\n    const squares = Array.from({\n      length: 10\n    }, (_, id) => ({\n      id,\n      row: Math.floor(Math.random() * rows),\n      // Ligne aléatoire\n      col: Math.floor(Math.random() * cols),\n      // Colonne aléatoire\n      delay: Math.random() * 5 // Délai aléatoire entre 0 et 5 secondes\n    }));\n    const __returned__ = {\n      gridSize,\n      rows,\n      cols,\n      squares\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["gridSize","rows","Math","ceil","window","innerHeight","cols","innerWidth","squares","Array","from","length","_","id","row","floor","random","col","delay"],"sources":["C:/Users/thoma/Desktop/Site pro/mon-site/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <router-view />\n    <!-- Grille animée avec des carrés alignés -->\n    <div class=\"animated-squares\">\n      <div\n        v-for=\"square in squares\"\n        :key=\"square.id\"\n        class=\"square\"\n        :style=\"{\n          top: `${square.row * 50}px`,\n          left: `${square.col * 50}px`,\n          animationDelay: `${square.delay}s`\n        }\"\n      ></div>\n    </div>\n  </div>\n</template>\n\n<script setup>\n// Génération de 10 carrés avec des positions alignées sur la grille\nconst gridSize = 50; // Taille des cellules de la grille en pixels\nconst rows = Math.ceil(window.innerHeight / gridSize); // Nombre de lignes\nconst cols = Math.ceil(window.innerWidth / gridSize); // Nombre de colonnes\n\nconst squares = Array.from({ length: 10 }, (_, id) => ({\n  id,\n  row: Math.floor(Math.random() * rows), // Ligne aléatoire\n  col: Math.floor(Math.random() * cols), // Colonne aléatoire\n  delay: Math.random() * 5, // Délai aléatoire entre 0 et 5 secondes\n}));\n</script>\n\n<style>\n/* Arrière-plan principal */\nbody {\n  margin: 0;\n  background-color: #2b2b2b; /* Fond noir */\n  color: #fff; /* Texte blanc */\n  font-family: Arial, sans-serif;\n  overflow-x: hidden;\n}\n\n#app {\n  position: relative;\n  min-height: 100vh;\n  background-color: #2c2c2c; /* Couleur de fond principale */\n  background-image: \n    linear-gradient(rgba(255, 255, 255, 0.05) 1px, transparent 1px),\n    linear-gradient(to right, rgba(255, 255, 255, 0.05) 1px, transparent 1px);\n  background-size: 50px 50px; /* Taille de la grille */\n}\n\n/* Conteneur pour les carrés animés */\n.animated-squares {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  pointer-events: none; /* Empêche les clics sur les carrés */\n}\n\n/* Style des carrés */\n.square {\n  position: absolute;\n  width: 50px;\n  height: 50px;\n  background-color: black; /* Fond initial noir */\n  animation: fadeInOut 5s infinite; /* Animation */\n}\n\n/* Animation des carrés */\n@keyframes fadeInOut {\n  0% {\n    background-color: black;\n  }\n  50% {\n    background-color: rgba(200, 200, 200, 0.3); /* Gris clair */\n  }\n  100% {\n    background-color: black;\n  }\n}\n</style>\n"],"mappings":"AAqBA,MAAMA,QAAQ,GAAG,EAAE,CAAC,CAAC;;;;;;;;;IADrB;IAEA,MAAMC,IAAI,GAAGC,IAAI,CAACC,IAAI,CAACC,MAAM,CAACC,WAAW,GAAGL,QAAQ,CAAC,CAAC,CAAC;IACvD,MAAMM,IAAI,GAAGJ,IAAI,CAACC,IAAI,CAACC,MAAM,CAACG,UAAU,GAAGP,QAAQ,CAAC,CAAC,CAAC;;IAEtD,MAAMQ,OAAO,GAAGC,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAE;IAAG,CAAC,EAAE,CAACC,CAAC,EAAEC,EAAE,MAAM;MACrDA,EAAE;MACFC,GAAG,EAAEZ,IAAI,CAACa,KAAK,CAACb,IAAI,CAACc,MAAM,CAAC,CAAC,GAAGf,IAAI,CAAC;MAAE;MACvCgB,GAAG,EAAEf,IAAI,CAACa,KAAK,CAACb,IAAI,CAACc,MAAM,CAAC,CAAC,GAAGV,IAAI,CAAC;MAAE;MACvCY,KAAK,EAAEhB,IAAI,CAACc,MAAM,CAAC,CAAC,GAAG,CAAC,CAAE;IAC5B,CAAC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}