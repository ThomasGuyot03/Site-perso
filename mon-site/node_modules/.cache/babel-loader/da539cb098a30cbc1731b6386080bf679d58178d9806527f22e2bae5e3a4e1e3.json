{"ast":null,"code":"const gridSize = 50; // Taille des cellules de la grille en pixels\n\nexport default {\n  __name: 'App',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const rows = Math.ceil(window.innerHeight / gridSize); // Nombre de lignes\n    const cols = Math.ceil(window.innerWidth / gridSize); // Nombre de colonnes\n\n    // Calculer la distance au centre de l'écran pour appliquer l'effet de couleur\n    const getSquareColorFilter = square => {\n      const centerX = window.innerWidth / 2;\n      const centerY = window.innerHeight / 2;\n\n      // Calculer la distance par rapport au centre de l'écran\n      const distance = Math.sqrt(Math.pow(square.col * gridSize - centerX, 2) + Math.pow(square.row * gridSize - centerY, 2));\n\n      // Plus la distance est grande, plus la couleur devient foncée\n      const maxDistance = Math.sqrt(Math.pow(centerX, 2) + Math.pow(centerY, 2));\n      const intensity = 1 - distance / maxDistance; // Intensité entre 0 (loin du centre) et 1 (au centre)\n\n      // Appliquer un filtre de couleur en fonction de la distance\n      return `brightness(${1 + intensity * 0.1})`; // Ajuster la luminosité pour les carrés proches du centre\n    };\n\n    // Génération des carrés animés\n    const squares = Array.from({\n      length: 10\n    }, (_, id) => ({\n      id,\n      row: Math.floor(Math.random() * rows),\n      // Ligne aléatoire\n      col: Math.floor(Math.random() * cols),\n      // Colonne aléatoire\n      delay: Math.random() * 10 // Délai aléatoire entre 0 et 10 secondes\n    }));\n    const __returned__ = {\n      gridSize,\n      rows,\n      cols,\n      getSquareColorFilter,\n      squares\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["gridSize","rows","Math","ceil","window","innerHeight","cols","innerWidth","getSquareColorFilter","square","centerX","centerY","distance","sqrt","pow","col","row","maxDistance","intensity","squares","Array","from","length","_","id","floor","random","delay"],"sources":["C:/Users/thoma/Desktop/Site pro/mon-site/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <router-view />\n\n    <!-- Grille animée avec des carrés alignés -->\n    <div class=\"animated-squares\">\n      <div\n        v-for=\"square in squares\"\n        :key=\"'square-' + square.id\"\n        class=\"square\"\n        :style=\"{\n          top: `${square.row * 50}px`,\n          left: `${square.col * 50}px`,\n          animationDelay: `${square.delay}s`,\n          filter: getSquareColorFilter(square)\n        }\"\n      ></div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nconst gridSize = 50; // Taille des cellules de la grille en pixels\nconst rows = Math.ceil(window.innerHeight / gridSize); // Nombre de lignes\nconst cols = Math.ceil(window.innerWidth / gridSize); // Nombre de colonnes\n\n// Calculer la distance au centre de l'écran pour appliquer l'effet de couleur\nconst getSquareColorFilter = (square) => {\n  const centerX = window.innerWidth / 2;\n  const centerY = window.innerHeight / 2;\n\n  // Calculer la distance par rapport au centre de l'écran\n  const distance = Math.sqrt(\n    Math.pow(square.col * gridSize - centerX, 2) + Math.pow(square.row * gridSize - centerY, 2)\n  );\n\n  // Plus la distance est grande, plus la couleur devient foncée\n  const maxDistance = Math.sqrt(Math.pow(centerX, 2) + Math.pow(centerY, 2));\n  const intensity = 1 - (distance / maxDistance); // Intensité entre 0 (loin du centre) et 1 (au centre)\n\n  // Appliquer un filtre de couleur en fonction de la distance\n  return `brightness(${1 + intensity * 0.1})`; // Ajuster la luminosité pour les carrés proches du centre\n};\n\n// Génération des carrés animés\nconst squares = Array.from({ length: 10 }, (_, id) => ({\n  id,\n  row: Math.floor(Math.random() * rows), // Ligne aléatoire\n  col: Math.floor(Math.random() * cols), // Colonne aléatoire\n  delay: Math.random() * 10, // Délai aléatoire entre 0 et 10 secondes\n}));\n</script>\n\n<style>\n/* Arrière-plan principal */\nbody {\n  margin: 0;\n  background-color: #2b2b2b;\n  color: #fff;\n  font-family: Arial, sans-serif;\n  overflow: hidden; /* Empêche les débordements */\n}\n\n#app {\n  position: relative;\n  min-height: 100vh;\n  background-color: #2c2c2c; /* Couleur de fond principale */\n  background-image: \n    linear-gradient(rgba(255, 255, 255, 0.05) 1px, transparent 1px),\n    linear-gradient(to right, rgba(255, 255, 255, 0.05) 1px, transparent 1px);\n  background-size: 50px 50px; /* Taille de la grille */\n}\n\n/* Conteneur pour les carrés animés */\n.animated-squares {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  pointer-events: none; /* Empêche les clics sur les carrés */\n}\n\n/* Style des carrés */\n.square {\n  position: absolute;\n  width: 50px;\n  height: 50px;\n  background-color: #2c2c2c; /* Fond initial identique à la grille */\n  animation: fadeInOut 5s infinite; /* Animation */\n  animation-timing-function: ease-in-out; /* Transitions douces */\n}\n\n/* Animation des carrés */\n@keyframes fadeInOut {\n  0% {\n    background-color: #2c2c2c; /* Même couleur que la grille */\n  }\n  50% {\n    background-color: rgba(80, 80, 80, 0.6); /* Gris légèrement plus clair */\n  }\n  100% {\n    background-color: #2c2c2c; /* Retour à la couleur initiale */\n  }\n}\n</style>\n"],"mappings":"AAsBA,MAAMA,QAAQ,GAAG,EAAE,CAAC,CAAC;;;;;;;;IACrB,MAAMC,IAAI,GAAGC,IAAI,CAACC,IAAI,CAACC,MAAM,CAACC,WAAW,GAAGL,QAAQ,CAAC,CAAC,CAAC;IACvD,MAAMM,IAAI,GAAGJ,IAAI,CAACC,IAAI,CAACC,MAAM,CAACG,UAAU,GAAGP,QAAQ,CAAC,CAAC,CAAC;;IAEtD;IACA,MAAMQ,oBAAoB,GAAIC,MAAM,IAAK;MACvC,MAAMC,OAAO,GAAGN,MAAM,CAACG,UAAU,GAAG,CAAC;MACrC,MAAMI,OAAO,GAAGP,MAAM,CAACC,WAAW,GAAG,CAAC;;MAEtC;MACA,MAAMO,QAAQ,GAAGV,IAAI,CAACW,IAAI,CACxBX,IAAI,CAACY,GAAG,CAACL,MAAM,CAACM,GAAG,GAAGf,QAAQ,GAAGU,OAAO,EAAE,CAAC,CAAC,GAAGR,IAAI,CAACY,GAAG,CAACL,MAAM,CAACO,GAAG,GAAGhB,QAAQ,GAAGW,OAAO,EAAE,CAAC,CAC5F,CAAC;;MAED;MACA,MAAMM,WAAW,GAAGf,IAAI,CAACW,IAAI,CAACX,IAAI,CAACY,GAAG,CAACJ,OAAO,EAAE,CAAC,CAAC,GAAGR,IAAI,CAACY,GAAG,CAACH,OAAO,EAAE,CAAC,CAAC,CAAC;MAC1E,MAAMO,SAAS,GAAG,CAAC,GAAIN,QAAQ,GAAGK,WAAY,CAAC,CAAC;;MAEhD;MACA,OAAO,cAAc,CAAC,GAAGC,SAAS,GAAG,GAAG,GAAG,CAAC,CAAC;IAC/C,CAAC;;IAED;IACA,MAAMC,OAAO,GAAGC,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAE;IAAG,CAAC,EAAE,CAACC,CAAC,EAAEC,EAAE,MAAM;MACrDA,EAAE;MACFR,GAAG,EAAEd,IAAI,CAACuB,KAAK,CAACvB,IAAI,CAACwB,MAAM,CAAC,CAAC,GAAGzB,IAAI,CAAC;MAAE;MACvCc,GAAG,EAAEb,IAAI,CAACuB,KAAK,CAACvB,IAAI,CAACwB,MAAM,CAAC,CAAC,GAAGpB,IAAI,CAAC;MAAE;MACvCqB,KAAK,EAAEzB,IAAI,CAACwB,MAAM,CAAC,CAAC,GAAG,EAAE,CAAE;IAC7B,CAAC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}